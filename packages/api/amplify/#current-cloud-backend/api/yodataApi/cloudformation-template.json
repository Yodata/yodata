{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {},
    "Parameters": {
        "AppSyncApiName": {
            "Type": "String",
            "Description": "The name of the AppSync API",
            "Default": "AppSyncSimpleTransform"
        },
        "DynamoDBModelTableReadIOPS": {
            "Type": "Number",
            "Description": "The number of read IOPS the table should support.",
            "Default": 5
        },
        "DynamoDBModelTableWriteIOPS": {
            "Type": "Number",
            "Description": "The number of write IOPS the table should support.",
            "Default": 5
        },
        "AuthCognitoUserPoolId": {
            "Type": "String",
            "Description": "The id of an existing User Pool to connect. If this is changed, a user pool will not be created for you.",
            "Default": "NONE"
        },
        "AuthCognitoUserPoolName": {
            "Type": "String",
            "Description": "The name of the AppSync API",
            "Default": "AppSyncUserPool"
        },
        "AuthCognitoUserPoolMobileClientName": {
            "Type": "String",
            "Description": "The name of the native user pool client.",
            "Default": "CognitoNativeClient"
        },
        "AuthCognitoUserPoolJSClientName": {
            "Type": "String",
            "Description": "The name of the web user pool client.",
            "Default": "CognitoJSClient"
        },
        "AuthCognitoUserPoolRefreshTokenValidity": {
            "Type": "Number",
            "Description": "The time limit, in days, after which the refresh token is no longer valid.",
            "Default": 30
        },
        "schemaGraphql": {
            "Type": "String",
            "Description": "The S3 location for the Schema: schema.graphql"
        },
        "QueryGetUserRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getUser.request"
        },
        "QueryGetUserResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getUser.response"
        },
        "QueryListUsersRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listUsers.request"
        },
        "QueryListUsersResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listUsers.response"
        },
        "MutationCreateUserRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createUser.request"
        },
        "MutationCreateUserResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createUser.response"
        },
        "MutationUpdateUserRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateUser.request"
        },
        "MutationUpdateUserResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateUser.response"
        },
        "MutationDeleteUserRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteUser.request"
        },
        "MutationDeleteUserResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteUser.response"
        },
        "QueryGetNamespaceRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getNamespace.request"
        },
        "QueryGetNamespaceResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getNamespace.response"
        },
        "QueryListNamespacesRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listNamespaces.request"
        },
        "QueryListNamespacesResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listNamespaces.response"
        },
        "MutationCreateNamespaceRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createNamespace.request"
        },
        "MutationCreateNamespaceResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createNamespace.response"
        },
        "MutationUpdateNamespaceRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateNamespace.request"
        },
        "MutationUpdateNamespaceResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateNamespace.response"
        },
        "MutationDeleteNamespaceRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteNamespace.request"
        },
        "MutationDeleteNamespaceResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteNamespace.response"
        },
        "QueryGetTypeRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getType.request"
        },
        "QueryGetTypeResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getType.response"
        },
        "QueryListTypesRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listTypes.request"
        },
        "QueryListTypesResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listTypes.response"
        },
        "MutationCreateTypeRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createType.request"
        },
        "MutationCreateTypeResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createType.response"
        },
        "MutationUpdateTypeRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateType.request"
        },
        "MutationUpdateTypeResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateType.response"
        },
        "MutationDeleteTypeRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteType.request"
        },
        "MutationDeleteTypeResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteType.response"
        },
        "QueryGetPropertyRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getProperty.request"
        },
        "QueryGetPropertyResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.getProperty.response"
        },
        "QueryListPropertysRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listPropertys.request"
        },
        "QueryListPropertysResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Query.listPropertys.response"
        },
        "MutationCreatePropertyRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createProperty.request"
        },
        "MutationCreatePropertyResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.createProperty.response"
        },
        "MutationUpdatePropertyRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateProperty.request"
        },
        "MutationUpdatePropertyResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.updateProperty.response"
        },
        "MutationDeletePropertyRequest": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteProperty.request"
        },
        "MutationDeletePropertyResponse": {
            "Type": "String",
            "Description": "The S3 location for the Resolver: Mutation.deleteProperty.response"
        }
    },
    "Resources": {
        "GraphQLSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DefinitionS3Location": {
                    "Ref": "schemaGraphql"
                }
            }
        },
        "GraphQLAPI": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
                "Name": {
                    "Ref": "AppSyncApiName"
                },
                "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
                "UserPoolConfig": {
                    "UserPoolId": {
                        "Fn::If": [
                            "AuthShouldCreateUserPool",
                            {
                                "Ref": "AuthCognitoUserPool"
                            },
                            {
                                "Ref": "AuthCognitoUserPoolId"
                            }
                        ]
                    },
                    "AwsRegion": {
                        "Ref": "AWS::Region"
                    },
                    "DefaultAction": "ALLOW"
                }
            }
        },
        "GraphQLAPIKey": {
            "Type": "AWS::AppSync::ApiKey",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                }
            }
        },
        "UserTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "User",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "UserIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "UserTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "UserTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "UserTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "UserDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "UserTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "UserIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "UserTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "UserTable"
                    }
                }
            }
        },
        "GetUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "UserDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getUser",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetUserRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetUserResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "UserDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listUsers",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListUsersRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListUsersResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreateUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "UserDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createUser",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreateUserRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreateUserResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdateUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "UserDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateUser",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdateUserRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdateUserResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeleteUserResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "UserDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteUser",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeleteUserRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeleteUserResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "NamespaceTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Namespace",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "NamespaceIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "NamespaceTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "NamespaceTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "NamespaceTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NamespaceDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "NamespaceTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "NamespaceIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "NamespaceTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "NamespaceTable"
                    }
                }
            }
        },
        "GetNamespaceResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "NamespaceDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getNamespace",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetNamespaceRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetNamespaceResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListNamespaceResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "NamespaceDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listNamespaces",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListNamespacesRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListNamespacesResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreateNamespaceResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "NamespaceDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createNamespace",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreateNamespaceRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreateNamespaceResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdateNamespaceResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "NamespaceDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateNamespace",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdateNamespaceRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdateNamespaceResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeleteNamespaceResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "NamespaceDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteNamespace",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeleteNamespaceRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeleteNamespaceResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "TypeTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Type",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "TypeIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "TypeTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "TypeTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "TypeTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "TypeDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "TypeTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "TypeIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "TypeTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "TypeTable"
                    }
                }
            }
        },
        "GetTypeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "TypeDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getType",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetTypeRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetTypeResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListTypeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "TypeDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listTypes",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListTypesRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListTypesResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreateTypeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "TypeDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createType",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreateTypeRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreateTypeResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdateTypeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "TypeDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateType",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdateTypeRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdateTypeResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeleteTypeResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "TypeDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteType",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeleteTypeRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeleteTypeResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "PropertyTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": [
                        "-",
                        [
                            "Property",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "PropertyIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "PropertyTable",
                            "role",
                            {
                                "Fn::GetAtt": [
                                    "GraphQLAPI",
                                    "ApiId"
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "appsync.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "PropertyTable",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "PropertyTable",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "PropertyDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "Name": "PropertyTable",
                "Type": "AMAZON_DYNAMODB",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "PropertyIAMRole",
                        "Arn"
                    ]
                },
                "DynamoDBConfig": {
                    "AwsRegion": {
                        "Fn::Select": [
                            3,
                            {
                                "Fn::Split": [
                                    ":",
                                    {
                                        "Fn::GetAtt": [
                                            "PropertyTable",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "TableName": {
                        "Ref": "PropertyTable"
                    }
                }
            }
        },
        "GetPropertyResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PropertyDataSource",
                        "Name"
                    ]
                },
                "FieldName": "getProperty",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryGetPropertyRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryGetPropertyResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "ListPropertyResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PropertyDataSource",
                        "Name"
                    ]
                },
                "FieldName": "listPropertys",
                "TypeName": "Query",
                "RequestMappingTemplateS3Location": {
                    "Ref": "QueryListPropertysRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "QueryListPropertysResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "CreatePropertyResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PropertyDataSource",
                        "Name"
                    ]
                },
                "FieldName": "createProperty",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationCreatePropertyRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationCreatePropertyResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "UpdatePropertyResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PropertyDataSource",
                        "Name"
                    ]
                },
                "FieldName": "updateProperty",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationUpdatePropertyRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationUpdatePropertyResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "DeletePropertyResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
                "ApiId": {
                    "Fn::GetAtt": [
                        "GraphQLAPI",
                        "ApiId"
                    ]
                },
                "DataSourceName": {
                    "Fn::GetAtt": [
                        "PropertyDataSource",
                        "Name"
                    ]
                },
                "FieldName": "deleteProperty",
                "TypeName": "Mutation",
                "RequestMappingTemplateS3Location": {
                    "Ref": "MutationDeletePropertyRequest"
                },
                "ResponseMappingTemplateS3Location": {
                    "Ref": "MutationDeletePropertyResponse"
                }
            },
            "DependsOn": "GraphQLSchema"
        },
        "AuthCognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
                "AliasAttributes": [
                    "email"
                ],
                "UserPoolName": {
                    "Ref": "AuthCognitoUserPoolName"
                },
                "Policies": {
                    "PasswordPolicy": {
                        "MinimumLength": 8,
                        "RequireLowercase": true,
                        "RequireNumbers": true,
                        "RequireSymbols": true,
                        "RequireUppercase": true
                    }
                },
                "AutoVerifiedAttributes": [
                    "email"
                ]
            },
            "Condition": "AuthShouldCreateUserPool"
        },
        "AuthCognitoUserPoolNativeClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
                "ClientName": {
                    "Ref": "AuthCognitoUserPoolMobileClientName"
                },
                "UserPoolId": {
                    "Fn::If": [
                        "AuthShouldCreateUserPool",
                        {
                            "Ref": "AuthCognitoUserPool"
                        },
                        {
                            "Ref": "AuthCognitoUserPoolId"
                        }
                    ]
                },
                "GenerateSecret": true,
                "RefreshTokenValidity": {
                    "Ref": "AuthCognitoUserPoolRefreshTokenValidity"
                },
                "ReadAttributes": [],
                "WriteAttributes": []
            },
            "Condition": "AuthShouldCreateUserPool"
        },
        "AuthCognitoUserPoolJSClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
                "ClientName": {
                    "Ref": "AuthCognitoUserPoolJSClientName"
                },
                "UserPoolId": {
                    "Fn::If": [
                        "AuthShouldCreateUserPool",
                        {
                            "Ref": "AuthCognitoUserPool"
                        },
                        {
                            "Ref": "AuthCognitoUserPoolId"
                        }
                    ]
                },
                "GenerateSecret": false,
                "RefreshTokenValidity": {
                    "Ref": "AuthCognitoUserPoolRefreshTokenValidity"
                },
                "ReadAttributes": [],
                "WriteAttributes": []
            },
            "Condition": "AuthShouldCreateUserPool"
        }
    },
    "Outputs": {
        "GraphQLAPIIdOutput": {
            "Description": "Your GraphQL API ID.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPI",
                    "ApiId"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiId"
                        ]
                    ]
                }
            }
        },
        "GraphQLAPIEndpointOutput": {
            "Description": "Your GraphQL API endpoint.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPI",
                    "GraphQLUrl"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiEndpoint"
                        ]
                    ]
                }
            }
        },
        "GraphQLAPIKeyOutput": {
            "Description": "Your GraphQL API key. Provide via 'x-api-key' header.",
            "Value": {
                "Fn::GetAtt": [
                    "GraphQLAPIKey",
                    "ApiKey"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "GraphQLApiKey"
                        ]
                    ]
                }
            }
        },
        "AuthCognitoUserPoolNativeClientId": {
            "Description": "Amazon Cognito UserPools native client ID",
            "Value": {
                "Fn::If": [
                    "AuthShouldCreateUserPool",
                    {
                        "Ref": "AuthCognitoUserPoolNativeClient"
                    },
                    {
                        "Fn::Join": [
                            " ",
                            [
                                "See UserPool:",
                                {
                                    "Ref": "AuthCognitoUserPoolId"
                                }
                            ]
                        ]
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "CognitoNativeClient"
                        ]
                    ]
                }
            }
        },
        "AuthCognitoUserPoolJSClientId": {
            "Description": "Amazon Cognito UserPools JS client ID",
            "Value": {
                "Fn::If": [
                    "AuthShouldCreateUserPool",
                    {
                        "Ref": "AuthCognitoUserPoolJSClient"
                    },
                    {
                        "Fn::Join": [
                            " ",
                            [
                                "See UserPool:",
                                {
                                    "Ref": "AuthCognitoUserPoolId"
                                }
                            ]
                        ]
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "CognitoJSClient"
                        ]
                    ]
                }
            }
        },
        "AuthCognitoUserPoolIdOutput": {
            "Description": "Amazon Cognito UserPool id",
            "Value": {
                "Fn::If": [
                    "AuthShouldCreateUserPool",
                    {
                        "Ref": "AuthCognitoUserPool"
                    },
                    {
                        "Ref": "AuthCognitoUserPoolId"
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        ":",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "CognitoUserPoolId"
                        ]
                    ]
                }
            }
        }
    },
    "Conditions": {
        "AuthShouldCreateUserPool": {
            "Fn::Equals": [
                {
                    "Ref": "AuthCognitoUserPoolId"
                },
                "NONE"
            ]
        }
    }
}